[gd_resource type="ShaderMaterial" load_steps=12 format=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeScalarOp" id=10]

[sub_resource type="VisualShaderNodeScalarOp" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=12]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
function = 0

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=3]

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 1

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "uv"

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;



void vertex() {
// Sortie:0

}

void fragment() {
// Entrée:3
	float n_out3p0;
	n_out3p0 = TIME;

// Entrée:9
	vec3 n_out9p0;
	n_out9p0 = vec3(UV,0.0);

// VectorDecompose:10
	float n_out10p0;
	float n_out10p1;
	float n_out10p2;
	n_out10p0 = n_out9p0.x;
	n_out10p1 = n_out9p0.y;
	n_out10p2 = n_out9p0.z;

// ScalarOp:11
	float n_out11p0;
	n_out11p0 = n_out3p0 + n_out10p0;

// ScalarFunc:2
	float n_out2p0;
	n_out2p0 = sin(n_out11p0);

// ScalarOp:12
	float n_out12p0;
	n_out12p0 = n_out3p0 + n_out10p1;

// ScalarFunc:5
	float n_out5p0;
	n_out5p0 = cos(n_out12p0);

// ScalarOp:13
	float n_out13p0;
	n_out13p0 = n_out3p0 + n_out10p2;

// ScalarFunc:6
	float n_out6p0;
	n_out6p0 = cos(n_out13p0);

// VectorCompose:4
	vec3 n_out4p0;
	n_out4p0 = vec3( n_out2p0 , n_out5p0 , n_out6p0 );

// Sortie:0
	ALBEDO = n_out4p0;
	EMISSION = n_out4p0;

}

void light() {
// Sortie:0

}
"
graph_offset = Vector2( -311, -91 )
nodes/fragment/0/position = Vector2( 880, 60 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 360, 60 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -120, 40 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 580, 80 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 360, 160 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 360, 260 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -340, 220 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( -140, 200 )
nodes/fragment/11/node = SubResource( 10 )
nodes/fragment/11/position = Vector2( 160, 20 )
nodes/fragment/12/node = SubResource( 11 )
nodes/fragment/12/position = Vector2( 140, 140 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( 160, 260 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 4, 0, 0, 0, 5, 0, 4, 1, 6, 0, 4, 2, 9, 0, 10, 0, 3, 0, 11, 0, 10, 0, 11, 1, 11, 0, 2, 0, 12, 0, 5, 0, 10, 1, 12, 1, 3, 0, 12, 0, 13, 0, 6, 0, 10, 2, 13, 1, 3, 0, 13, 0, 4, 0, 0, 5 )

[resource]
shader = SubResource( 8 )
